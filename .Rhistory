import pandas
import pandas
reticulate::repl_python()
library(data.table)
reticulate::repl_python()
library(data.table)
reticulate::repl_python()
py$a
library(reticulate)
repl_python()
py$a
library(reticulate)
repl_python()
library(data.table)
reticulate::repl_python()
py$a
reticulate::repl_python()
py$est
dml <- py$est
dml
reticulate::repl_python()
py$X_test
dml$fit(
py$Y_train,
py$T_train,
py$X_train,
py$W_train
)
dml$fit(
py$Y_train,
py$T_train,
X = py$X_train,
W = py$W_train
)
te_pred = dml$effect(py$X_test)
te_pred
reticulate::repl_python()
data_train <-
data.table(
y = py$y_train
) %>%
cbind(., py$X_train)
library(tidyverse)
library(ranger)
data_train <-
data.table(
y = py$y_train
) %>%
cbind(., py$X_train)
library(tidyverse)
library(ranger)
library(data.table)
data_train <-
data.table(
y = py$y_train
) %>%
cbind(., py$X_train)
reticulate::repl_python()
library(tidyverse)
library(ranger)
library(data.table)
data_train <-
data.table(
y = py$y_train
) %>%
cbind(., py$X_train)
library(reticulate)
library(tidyverse)
library(ranger)
library(data.table)
reticulate::repl_python()
data_train <-
data.table(
y = py$y_train
) %>%
cbind(., py$X_train)
rf_fit <-
ranger(
y ~ .,
data = fake_data_train,
num.trees = 2000,
mtry = 20
)
data_train <-
data.table(
y = py$y_train
) %>%
cbind(., py$X_train)
rf_fit <-
ranger(
y ~ .,
data = data_train,
num.trees = 2000,
mtry = 20
)
library(reticulate)
library(tidyverse)
library(ranger)
library(data.table)
reticulate::repl_python()
data_train <-
data.table(
y = py$y
) %>%
cbind(., py$X)
rf_fit <-
ranger(
y ~ .,
data = data_train,
num.trees = 2000,
mtry = 20
)
library(reticulate)
library(tidyverse)
library(ranger)
library(data.table)
reticulate::repl_python()
reticulate::source_python('~/Taro Mieno Dropbox/Taro Mieno/TeachingUNL/MachineLearning/LectureNotes/make_data.py')
reticulate::source_python('~/Taro Mieno Dropbox/Taro Mieno/TeachingUNL/MachineLearning/LectureNotes/make_data.py')
library(reticulate)
source_python("import_modules.py")
source_python(here::here("LectureNotes/import_modules.py"))
here::here("LectureNotes/import_modules.py")
source_python(here::here("import_modules.py"))
source_python(here::here("import_modules.py"))
n_samples <- as.integer(2000)
n_features <- as.integer(20)
n_informative <- as.integer(15)
noise <- 2
rng <- np$random$RandomState(as.integer(123))
make_regression
source_python(here::here("import_modules.py"))
rng <- numpy$random$RandomState(as.integer(123))
library(reticulate)
source_python(here::here("import_modules.py"))
n_samples <- as.integer(2000)
n_features <- as.integer(20)
n_informative <- as.integer(15)
noise <- 2
rng <- numpy$random$RandomState(as.integer(123))
make_regression
np <- import("numpy")
rng <- numpy$random$RandomState(as.integer(123))
rng <- np$random$RandomState(as.integer(123))
rng
make_regression(
n_samples,
n_features,
n_informative = n_informative,
noise = noise,
random_state = rng
)
make_regression
numpy$random
py$numpy$random
py$make_regression
make_regression
library(reticulate)
source_python(here::here("import_modules.py"))
n_samples <- as.integer(2000)
n_features <- as.integer(20)
n_informative <- as.integer(15)
noise <- 2
np <- import("numpy")
rng <- np$random$RandomState(as.integer(123))
make_regression
synth_data <-
make_regression(
n_samples,
n_features,
n_informative = n_informative,
noise = noise,
random_state = rng
)
reticulate::repl_python()
library(reticulate)
reticulate::repl_python()
